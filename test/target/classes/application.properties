## Database Properties
spring.datasource.url = jdbc:mysql://localhost:3306/employee?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password = 
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57InnoDBDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# Security
security.oauth2.client.scope=password
security.oauth2.client.client-id= rom
security.oauth2.client.client-secret= 123
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true


#Loggger
logging.level.com.app2.controller=TRACE 
logging.file=C:/logs/spring-boot-logging.log

#Kafka
server.port: 9000
#consumer
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: group-id
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#producer
spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer